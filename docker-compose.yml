# Use postgres/example user/password credentials
version: '3.8'
services:

  db:
    image: postgres
    restart: always
    volumes:
      - ./pgdb/0-initdb.sh:/docker-entrypoint-initdb.d/0-initdb.sh
      - ./pgdb/99-initdb.sql:/docker-entrypoint-initdb.d/99-initdb.sql
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_CNT_PASSWORD}
      DBNAME: ${DBNAME}
      DBTABLE: ${DBTABLE}
      DBUSER: ${DBUSER}
      DBPASS: ${DBPASS}
    ports:
      - 5432:5432

  adminer:
    image: adminer
    restart: always
    depends_on:
      - db
    ports:
      - 8088:8080

  gobuilder:
    image: golang:1.19-alpine
    restart: "no"
    volumes:
      - ./:${OUTPATH}
    working_dir: ${OUTPATH}
    environment:
      GOOS: linux
      GOARCH: amd64
      CGO_ENABLED: 0
    entrypoint: sh -c "rm ${OUTNAME};go build -o ${OUTNAME}"

  gorun:
    image: amd64/alpine
    restart: always
    depends_on:
      - db
    environment:
      PORT: ${PORT}
      DATABASE_URL: "postgres://${DBUSER}:${DBPASS}@db:5432/${DBNAME}?sslmode=disable"
    working_dir: ${OUTPATH}
    ports:
      - ${PORT}:${PORT}
    volumes:
      - ./:${OUTPATH}
    entrypoint: /bin/sh -c "while [ ! -f ${OUTNAME} ]; do sleep 2; done;sleep 7;chmod +x ${OUTNAME};${OUTPATH}/${OUTNAME} --debugmode"
